Author: Yann Droneaud <ydroneaud@mandriva.com>

Fixed reiserfsprogs version used to build imaging LRS / Pulse 2.

This is based on an out-dated version of reiserfsprogs which doesn't build
with newer kernel headers, c library, compiler.

This patch try to fix such problems.

diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/debugreiserfs/debugreiserfs.c reiserfsprogs-3.x.0i-linbox01-patch02/debugreiserfs/debugreiserfs.c
--- reiserfsprogs-3.x.0i-linbox01/debugreiserfs/debugreiserfs.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/debugreiserfs/debugreiserfs.c	2010-02-19 09:49:51.000000000 -0500
@@ -341,6 +341,7 @@
 	    }
 	}
     cont:
+	;
     }
     free (line);
     printf ("Done\n");
@@ -398,7 +399,7 @@
 	    if (sscanf (line, "%c %s\n", &code, name) != 2) {
 		die ("recover_file: wrong input N format");
 	    }
-	    fd = open (name, O_RDWR | O_CREAT | O_EXCL, 0644);
+	    fd = open64 (name, O_RDWR | O_CREAT | O_EXCL | O_LARGEFILE, 0644);
 	    if (fd == -1)
 		die ("recover_file: could not create file %s: %s",
 		     name,strerror (errno));
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/debugreiserfs/debugreiserfs.h reiserfsprogs-3.x.0i-linbox01-patch02/debugreiserfs/debugreiserfs.h
--- reiserfsprogs-3.x.0i-linbox01/debugreiserfs/debugreiserfs.h	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/debugreiserfs/debugreiserfs.h	2010-02-19 09:49:51.000000000 -0500
@@ -3,6 +3,8 @@
  */
 
 #define _GNU_SOURCE
+#define _LARGEFILE64_SOURCE
+
 #include <stdio.h>
 #include <unistd.h>
 #include <stdlib.h>
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/debugreiserfs/pack.c reiserfsprogs-3.x.0i-linbox01-patch02/debugreiserfs/pack.c
--- reiserfsprogs-3.x.0i-linbox01/debugreiserfs/pack.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/debugreiserfs/pack.c	2010-02-19 09:49:51.000000000 -0500
@@ -686,7 +686,7 @@
     char * buf;
     int fd;
 
-    fd = open (file, O_RDONLY);
+    fd = open64 (file, O_RDONLY | O_LARGEFILE);
     if (fd == -1) {
 	perror ("open failed");
 	return 0;
@@ -720,7 +720,7 @@
 
     fprintf (stderr, "dumping block %d of the \"%s\"\n", block, file);
 
-    fd = open (file, O_RDONLY);
+    fd = open64 (file, O_RDONLY | O_LARGEFILE);
     if (fd == -1) {
 	perror ("open failed");
 	return 0;
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/debugreiserfs/unpack.c reiserfsprogs-3.x.0i-linbox01-patch02/debugreiserfs/unpack.c
--- reiserfsprogs-3.x.0i-linbox01/debugreiserfs/unpack.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/debugreiserfs/unpack.c	2010-02-19 09:49:51.000000000 -0500
@@ -545,7 +545,7 @@
     if (is_mounted (argv[optind]))
 	reiserfs_panic ("%s seems mounted, umount it first\n", argv[optind]);
   
-    fd = open (argv[optind], O_RDWR | O_LARGEFILE);
+    fd = open64 (argv[optind], O_RDWR | O_LARGEFILE);
     if (fd == -1) {
 	perror ("open failed");
 	return 0;
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/fsck/check.c reiserfsprogs-3.x.0i-linbox01-patch02/fsck/check.c
--- reiserfsprogs-3.x.0i-linbox01/fsck/check.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/fsck/check.c	2010-02-19 09:49:51.000000000 -0500
@@ -277,6 +277,10 @@
 #include <sys/mount.h>
 
 
+#if 0
+/* XXX seems not used anywhere in reiserfs,
+ * XXX not even declared in a header
+ */
 int blocks_on_device (int dev, int blocksize)
 {
     int size;
@@ -288,16 +292,19 @@
 	return  size / (blocksize / 512);
     } else {
 	struct stat stat_buf;
-	memset(&stat_buf, '\0', sizeof(struct stat));
-	if(fstat(dev, &stat_buf) >= 0) {
-	    return stat_buf.st_size / (blocksize / 512);
-	} else {
-	    die ("can not calculate device size\n");
+	struct stat64 stat_buf64;
+
+	if(fstat64(dev, &stat_buf64) == 0) {
+	  return stat_buf64.st_size / (blocksize / 512);
 	}
+	if (fstat(dev, &stat_buf) == 0) {
+	  return stat_buf.st_size / (blocksize / 512);
+	}	
+	die ("can not calculate device size\n");
     }
     return 0;
 }
-
+#endif
 
 int is_internal_bad (struct buffer_head * bh)
 {
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/fsck/fsck.h reiserfsprogs-3.x.0i-linbox01-patch02/fsck/fsck.h
--- reiserfsprogs-3.x.0i-linbox01/fsck/fsck.h	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/fsck/fsck.h	2010-03-03 10:59:55.000000000 -0500
@@ -3,6 +3,7 @@
  */
 
 #define _GNU_SOURCE
+#define _LARGEFILE64_SOURCE
 
 #include <stdio.h>
 #include <stdlib.h>
@@ -201,7 +202,7 @@
 
 //int comp_keys_3 (void * key1, void * key2);
 //int comp_dir_entries (void * key1, void * key2);
-inline int ubin_search (void * key, void * base, int num, int width, __u32 *ppos, comp_function_t comp_func);
+int ubin_search (void * key, void * base, int num, int width, __u32 *ppos, comp_function_t comp_func);
 
 
 /* bitmap.c */
@@ -358,7 +359,7 @@
 
 
 /* ?? */
-extern inline int change_version (int version)
+static inline int change_version (int version)
 {
    return (version == 1)?0:1;
 }
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/fsck/pass0.c reiserfsprogs-3.x.0i-linbox01-patch02/fsck/pass0.c
--- reiserfsprogs-3.x.0i-linbox01/fsck/pass0.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/fsck/pass0.c	2010-02-19 09:49:51.000000000 -0500
@@ -587,6 +587,7 @@
 
 		default:
 		    /* upper item was the first item of a node */
+		    break;
 		}
 
 		retval = lower_correct (bh, ih, i);
@@ -608,6 +609,7 @@
 		default:
 		    /* there wer only two items in a node, so we could not
                        decide what to delete, go and ask user */
+		    break;
 		}
 		fsck_log ("pass0: which of these items looks better (other will be deleted)?\n"
 			  "%H\n%H\n", ih - 1, ih);
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/fsck/pass4.c reiserfsprogs-3.x.0i-linbox01-patch02/fsck/pass4.c
--- reiserfsprogs-3.x.0i-linbox01/fsck/pass4.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/fsck/pass4.c	2010-02-19 09:49:51.000000000 -0500
@@ -68,6 +68,7 @@
 	pathrelse (&path);
 
     cont:
+	;
     }
 
     pathrelse (&path);
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/include/reiserfs_fs.h reiserfsprogs-3.x.0i-linbox01-patch02/include/reiserfs_fs.h
--- reiserfsprogs-3.x.0i-linbox01/include/reiserfs_fs.h	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/include/reiserfs_fs.h	2010-03-05 09:56:19.000000000 -0500
@@ -270,14 +270,14 @@
 #define REISERFS_SUPER_MAGIC_STRING "ReIsErFs"
 #define REISER2FS_SUPER_MAGIC_STRING "ReIsEr2Fs"
 
-extern __inline__ int is_reiserfs_magic_string (struct reiserfs_super_block * rs)
+static inline int is_reiserfs_magic_string (struct reiserfs_super_block * rs)
 {
     return (!strncmp (rs->s_v1.s_magic, REISERFS_SUPER_MAGIC_STRING, 
 		      strlen ( REISERFS_SUPER_MAGIC_STRING)));
 }
 
 
-extern __inline__ int is_reiser2fs_magic_string (struct reiserfs_super_block * rs)
+static inline int is_reiser2fs_magic_string (struct reiserfs_super_block * rs)
 {
     return (!strncmp (rs->s_v1.s_magic, REISER2FS_SUPER_MAGIC_STRING, 
 		      strlen ( REISER2FS_SUPER_MAGIC_STRING)));
@@ -286,7 +286,7 @@
 
 // this one had signature in different place of the super_block
 // structure
-extern __inline__ int is_prejournaled_reiserfs (struct reiserfs_super_block * rs)
+static inline int is_prejournaled_reiserfs (struct reiserfs_super_block * rs)
 {
     return (!strncmp((char*)rs + REISERFS_SUPER_MAGIC_STRING_OFFSET_NJ,
 		     REISERFS_SUPER_MAGIC_STRING, strlen(REISERFS_SUPER_MAGIC_STRING)));
@@ -360,7 +360,7 @@
 
 
 /* compares description block with commit block.  returns 1 if they differ, 0 if they are the same */
-extern inline int does_desc_match_commit (struct reiserfs_journal_desc *desc, 
+static inline int does_desc_match_commit (struct reiserfs_journal_desc *desc, 
 					  struct reiserfs_journal_commit *commit) 
 {
     if (commit->j_trans_id != desc->j_trans_id || commit->j_len != desc->j_len ||
@@ -435,7 +435,7 @@
 
 // old keys (on i386) have k_offset_v2.k_type == 15 (direct and
 // indirect) or == 0 (dir items and stat data)
-extern __inline__ int key_format (const struct key * key)
+static inline int key_format (const struct key * key)
 {
     int type;
 
@@ -448,7 +448,7 @@
 }
 
 
-extern __inline__ loff_t get_offset (const struct key * key)
+static inline loff_t get_offset (const struct key * key)
 {
     if (key_format (key) == KEY_FORMAT_1)
 	return le32_to_cpu (key->u.k_offset_v1.k_offset);
@@ -457,7 +457,7 @@
 }
 
 
-extern __inline__ int uniqueness2type (__u32 uniqueness)
+static inline int uniqueness2type (__u32 uniqueness)
 {
     switch (uniqueness) {
     case V1_SD_UNIQUENESS: return TYPE_STAT_DATA;
@@ -469,7 +469,7 @@
 }
 
 
-extern __inline__ __u32 type2uniqueness (int type)
+static inline __u32 type2uniqueness (int type)
 {
     switch (type) {
     case TYPE_STAT_DATA: return V1_SD_UNIQUENESS;
@@ -481,7 +481,7 @@
 }
 
 
-extern __inline__ int get_type (const struct key * key)
+static inline int get_type (const struct key * key)
 {
     if (key_format (key) == KEY_FORMAT_1)
 	return uniqueness2type (le32_to_cpu (key->u.k_offset_v1.k_uniqueness));
@@ -489,7 +489,7 @@
 }
 
 
-extern __inline__ char * key_of_what (const struct key * key)
+static inline char * key_of_what (const struct key * key)
 {
     switch (get_type (key)) {
     case TYPE_STAT_DATA: return "SD";
@@ -501,7 +501,7 @@
 }
 
 
-extern __inline__ int type_unknown (struct key * key)
+static inline int type_unknown (struct key * key)
 {
     int type = get_type (key);
     
@@ -520,7 +520,7 @@
 
 // this sets key format as well as type of item key belongs to
 //
-extern __inline__ void set_type (int format, struct key * key, int type)
+static inline void set_type (int format, struct key * key, int type)
 {
     if (format == KEY_FORMAT_1)
 	key->u.k_offset_v1.k_uniqueness = cpu_to_le32 (type2uniqueness (type));
@@ -530,7 +530,7 @@
 
 
 // 
-extern __inline__ void set_offset (int format, struct key * key, loff_t offset)
+static inline void set_offset (int format, struct key * key, loff_t offset)
 {
     if (format == KEY_FORMAT_1)
 	key->u.k_offset_v1.k_offset = cpu_to_le32 (offset);
@@ -540,20 +540,20 @@
 }
 
 
-extern __inline__ void set_type_and_offset (int format, struct key * key, loff_t offset, int type)
+static inline void set_type_and_offset (int format, struct key * key, loff_t offset, int type)
 {
     set_type (format, key, type);
     set_offset (format, key, offset);
 }
 
 
-extern __inline__ void copy_key (void * to, void * from)
+static inline void copy_key (void * to, void * from)
 {
     memcpy (to, from, KEY_SIZE);
 }
 
 
-extern inline void copy_short_key (void * to, void * from)
+static inline void copy_short_key (void * to, void * from)
 {
     memcpy (to, from, SHORT_KEY_SIZE);
 }
@@ -601,7 +601,7 @@
 /* size of item header     */
 #define IH_SIZE (sizeof(struct item_head))
 
-extern inline void copy_item_head(void * p_v_to, void * p_v_from)
+static inline void copy_item_head(void * p_v_to, void * p_v_from)
 {
     memcpy (p_v_to, p_v_from, IH_SIZE);
 }
@@ -656,7 +656,7 @@
 /* object identifier for root dir */
 #define REISERFS_ROOT_OBJECTID 2
 #define REISERFS_ROOT_PARENT_OBJECTID 1
-/*extern struct key root_key;*/
+/*static struct key root_key;*/
 
 
 /* 
@@ -1466,27 +1466,27 @@
 /* stree.c */
 void padd_item (char * item, int total_length, int length);
 int B_IS_IN_TREE(struct buffer_head *);
-extern inline void copy_key (void * to, void * from);
-extern inline void copy_short_key (void * to, void * from);
-extern inline void copy_item_head(void * p_v_to, void * p_v_from);
-extern inline int comp_keys (void * k1, void * k2);
-extern inline int  comp_short_keys (void * p_s_key1, void * p_s_key2);
+void copy_key (void * to, void * from);
+void copy_short_key (void * to, void * from);
+void copy_item_head(void * p_v_to, void * p_v_from);
+int comp_keys (void * k1, void * k2);
+int  comp_short_keys (void * p_s_key1, void * p_s_key2);
 int comp_items (struct item_head  * p_s_ih, struct path * p_s_path);
 struct key * get_rkey (struct path * p_s_chk_path, struct super_block  * p_s_sb);
-inline int bin_search (void * p_v_key, void * p_v_base, int p_n_num, int p_n_width, int * p_n_pos);
+int bin_search (void * p_v_key, void * p_v_base, int p_n_num, int p_n_width, int * p_n_pos);
 int search_by_key (struct super_block *, struct key *, struct path *, int * , int);
 int search_by_entry_key (struct super_block * sb, struct key * key, struct path * path);
 int search_for_position_by_key (struct super_block * p_s_sb, struct key * p_s_key, 
 				struct path * p_s_search_path);
 int search_by_objectid (struct super_block *, struct key *, struct path *, int *);
-extern inline void decrement_bcount (struct buffer_head * p_s_bh);
+void decrement_bcount (struct buffer_head * p_s_bh);
 void decrement_counters_in_path (struct path * p_s_search_path);
 void pathrelse (struct path * p_s_search_path);
 
 
 #ifdef FU //REISERFS_FSCK
 
-inline int is_left_mergeable (struct item_head * ih, unsigned long bsize);
+int is_left_mergeable (struct item_head * ih, unsigned long bsize);
 
 #else
 
@@ -1589,7 +1589,7 @@
 //#define entry_length(ih,deh,i) (((i) ? deh_location ((deh)-1) : ih_item_len (ih)) - deh_location (deh))
 
 // NOTE: this is not name length. This is length of whole entry
-extern __inline__ int entry_length (struct item_head * ih, struct reiserfs_de_head * deh, int pos_in_item)
+static inline int entry_length (struct item_head * ih, struct reiserfs_de_head * deh, int pos_in_item)
 {
     if (pos_in_item)
 	return (deh_location (deh - 1) - deh_location (deh));
@@ -1599,7 +1599,7 @@
 // name in 'i'-th entry of the item 'ih' starts here
 #define name_in_entry(deh,i) ((char *)(deh - (i)) + deh_location(deh))
 
-extern __inline__ int name_length (struct item_head * ih,
+static inline int name_length (struct item_head * ih,
 				   struct reiserfs_de_head * deh, int i)
 {
     int len = entry_length (ih, deh, i);
@@ -1624,7 +1624,7 @@
 __u32 r5_hash (const char *msg, int len);
 
 #if 0
-extern __inline__ hashf_t code2function (int code)
+static inline hashf_t code2function (int code)
 {
     switch (code) {
     case TEA_HASH:
@@ -1643,6 +1643,6 @@
 /* node_format.c */
 int get_journal_old_start_must (struct reiserfs_super_block * rs);
 int get_journal_start_must (int blocksize);
-/*extern hashf_t hashes [];*/
+/*static hashf_t hashes [];*/
 
 
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/lib/io.c reiserfsprogs-3.x.0i-linbox01-patch02/lib/io.c
--- reiserfsprogs-3.x.0i-linbox01/lib/io.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/lib/io.c	2010-02-19 09:49:51.000000000 -0500
@@ -2,7 +2,9 @@
  * Copyright 1996, 1997 Hans Reiser, see reiserfs/README for licensing and copyright details
  */
 #define _GNU_SOURCE
+#define _LARGEFILE64_SOURCE
 
+#include <stdlib.h>
 #include <stdio.h>
 #include <unistd.h>
 #include <string.h>
@@ -343,28 +345,6 @@
     }
 }
 
-#if 0
-#if ! ( defined __USE_LARGEFILE64 || defined __USE_FILE_OFFSET64 )
-_syscall5 (int,  _llseek,  uint,  fd, ulong, hi, ulong, lo,
-           loff_t *, res, uint, wh);
-#endif
-
-loff_t reiserfs_llseek (unsigned int fd, loff_t offset, unsigned int origin)
-{
-#if defined __USE_FILE_OFFSET64
-    return lseek(fd, offset, origin);
-#elif defined __USE_LARGEFILE64
-    return lseek64(fd, offset, origin);
-#else
-    loff_t retval, result;
-    retval = _llseek (fd, ((unsigned long long) offset) >> 32,
-		      ((unsigned long long) offset) & 0xffffffff,
-		      &result, origin);
-    return (retval != 0 ? (loff_t)-1 : result);
-#endif
-}
-#endif
-
 static int f_read(struct buffer_head * bh)
 {
     loff_t offset;
@@ -372,7 +352,7 @@
 
     offset = (loff_t)bh->b_size * (loff_t)bh->b_blocknr;
     /*if (reiserfs_llseek (bh->b_dev, offset, SEEK_SET) == (loff_t)-1)*/
-    if (lseek64 (bh->b_dev, offset, SEEK_SET) == (loff_t)-1)
+    if (lseek64 (bh->b_dev, (off64_t) offset, SEEK_SET) == (off64_t)-1)
         return 0;
 
     bytes = read (bh->b_dev, bh->b_data, bh->b_size);
@@ -427,7 +407,7 @@
     size = bh->b_size;
     offset = (loff_t)size * (loff_t)bh->b_blocknr;
 
-    if (lseek64 (bh->b_dev, offset, SEEK_SET) == (loff_t)-1){
+    if (lseek64 (bh->b_dev, (off64_t) offset, SEEK_SET) == (loff_t)-1){
 	fprintf (stderr, "bwrite: lseek to position %Ld (block=%lu, dev=%d): %s\n",
 		 offset, bh->b_blocknr, bh->b_dev, strerror (errno));
 	exit (4); /* File system errors left uncorrected */
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/lib/misc.c reiserfsprogs-3.x.0i-linbox01-patch02/lib/misc.c
--- reiserfsprogs-3.x.0i-linbox01/lib/misc.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/lib/misc.c	2010-03-05 09:59:20.000000000 -0500
@@ -1,8 +1,9 @@
 /*
  * Copyright 1996, 1997, 1998 Hans Reiser
  */
-/*#define _GNU_SOURCE*/
-#define _FILE_OFFSET_BITS 64
+
+#define _GNU_SOURCE
+#define _LARGEFILE64_SOURCE
 
 #include <stdio.h>
 #include <unistd.h>
@@ -143,7 +144,7 @@
 #define CONTROL_SIZE (strlen (MEM_BEGIN) + 1 + sizeof (int) + strlen (MEM_END) + 1)
 
 
-static int get_mem_size (char * p)
+static inline int get_mem_size (char * p)
 {
     char * begin;
 
@@ -248,7 +249,7 @@
 
 typedef int (*func_t) (char *);
 
-static int is_readonly_dir (char * dir)
+static inline int is_readonly_dir (char * dir)
 {
     char * name;
     FILE * f;
@@ -281,40 +282,39 @@
     return 1;
 }
 
-
-#include <unistd.h>
-#include <linux/unistd.h>
-
-#define __NR_stat64 195
-_syscall2(long, stat64, char *, filename, struct stat *, statbuf);
-
-
-static int _is_mounted (char * device_name, func_t f)
+static inline int _is_mounted (char * device_name, func_t f)
 {
     int retval;
     FILE *fp;
     struct mntent *mnt;
     struct statfs stfs;
     struct stat root_st;
+    struct stat64 root_st64;
     struct stat device_st;
-    /*    struct stat64 device_st64;*/
+    struct stat64 device_st64;
     int used_stat64 = 1;
 
-    if (stat ("/", &root_st) == -1)
-	die ("is_mounted: could not stat \"/\": %m\n");
-
-    if (stat64 (device_name, &device_st) == -1) {
+    if (used_stat64 && stat64 ("/", &root_st64) == -1) {
 	used_stat64 = 0;
-	if (stat (device_name, &device_st) == -1)
-	    die ("is_mounted: could not stat file \"%s\": %m",
-		 device_name);
+    }
+    if (!used_stat64 && stat ("/", &root_st) == -1) {
+	die ("is_mounted: could not stat \"/\": %m\n");
+    }
+    if (used_stat64 && stat64 (device_name, &device_st64) == -1) {
+      die ("is_mounted: could not stat file \"%s\": %m",
+	   device_name);
+    }
+    if (!used_stat64 && stat (device_name, &device_st) == -1) {
+      die ("is_mounted: could not stat file \"%s\": %m",
+	   device_name);
     }
 
-    if ((used_stat64 && !S_ISBLK (device_st.st_mode)) || !S_ISBLK (device_st.st_mode))
+    if ((used_stat64 && !S_ISBLK (device_st64.st_mode)) || 
+	!S_ISBLK (device_st.st_mode))
 	/* not block device file could not be mounted */
 	return 0;
 
-    if ((used_stat64 && root_st.st_dev == device_st.st_rdev) ||
+    if ((used_stat64 && root_st64.st_dev == device_st64.st_rdev) ||
 	root_st.st_dev == device_st.st_rdev) {
 	/* device is mounted as root */
 	return (f ? f ("/") : 1);
@@ -403,7 +403,7 @@
 static char progress_to_be[1024];
 static char current_progress[1024];
 
-static void str_to_be (char * buf, int prosents)
+static inline void str_to_be (char * buf, int prosents)
 {
     int i;
     prosents -= prosents % 4;
@@ -476,7 +476,7 @@
 
 // we used to use such function in the kernel stuff of reiserfs. Lets
 // have them in utils as well
-inline __u32 cpu_to_le32 (__u32 val)
+__u32 cpu_to_le32 (__u32 val)
 {
     if (endianess == ENDIANESS_NOT_DEFINED)
 	find_endianess ();
@@ -491,13 +491,13 @@
 }
 
 
-inline __u32 le32_to_cpu (__u32 val)
+__u32 le32_to_cpu (__u32 val)
 {
     return cpu_to_le32 (val);
 }
 
 
-inline __u16 cpu_to_le16 (__u16 val)
+__u16 cpu_to_le16 (__u16 val)
 {
     return val;
 
@@ -512,7 +512,7 @@
 }
 
 
-inline __u16 le16_to_cpu (__u16 val)
+__u16 le16_to_cpu (__u16 val)
 {
     /*printf ("%s:%u %p %p %p\n", __FILE__, __LINE__,
 	    __builtin_return_address (0),
@@ -523,7 +523,7 @@
 }
 
 
-inline __u64 cpu_to_le64 (__u64 val)
+__u64 cpu_to_le64 (__u64 val)
 {
     if (endianess == ENDIANESS_NOT_DEFINED)
 	find_endianess ();
@@ -536,7 +536,7 @@
 }
 
 
-inline __u64 le64_to_cpu (__u64 val)
+__u64 le64_to_cpu (__u64 val)
 {
     return cpu_to_le64 (val);
 }
@@ -545,14 +545,13 @@
 /* Given a file descriptor and an offset, check whether the offset is
    a valid offset for the file - return 0 if it isn't valid or 1 if it
    is */
-loff_t reiserfs_llseek (unsigned int fd, loff_t offset, unsigned int origin);
-static int valid_offset( int fd, loff_t offset )
+static inline int valid_offset( int fd, loff_t offset )
 {
     char ch;
     loff_t res;
 
     /*res = reiserfs_llseek (fd, offset, 0);*/
-    res = lseek64 (fd, offset, 0);
+    res = lseek64 (fd, (off64_t) offset, 0);
     if (res < 0)
 	return 0;
 
@@ -570,7 +569,7 @@
     int opened_here = 0;
 
     if (fd < 0) {
-	fd = open (filename, O_RDONLY);
+	fd = open64 (filename, O_RDONLY | O_LARGEFILE);
 	opened_here = 1;
     }
     if (fd < 0)
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/mkreiserfs/mkreiserfs.c reiserfsprogs-3.x.0i-linbox01-patch02/mkreiserfs/mkreiserfs.c
--- reiserfsprogs-3.x.0i-linbox01/mkreiserfs/mkreiserfs.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/mkreiserfs/mkreiserfs.c	2010-02-19 09:49:51.000000000 -0500
@@ -14,6 +14,8 @@
 //
 // FIXME: not 'not-i386' safe
 //
+#define _LARGEFILE64_SOURCE
+
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
@@ -375,7 +377,7 @@
     char *tmp;
     int dev;
     int force = 0;
-    struct stat st;
+    struct stat64 st;
     char * device_name;
     char c;
 
@@ -444,11 +446,11 @@
 	    exit (1);
     }
 
-    dev = open (device_name, O_RDWR);
+    dev = open64 (device_name, O_RDWR | O_LARGEFILE);
     if (dev == -1)
 	die ("mkreiserfs: can not open '%s': %s", device_name, strerror (errno));
   
-    if (fstat (dev, &st) < 0)
+    if (fstat64 (dev, &st) < 0)
 	die ("mkreiserfs: unable to stat %s", device_name);
 
     if (!S_ISBLK (st.st_mode)) {
@@ -461,7 +463,23 @@
     } else {
 	// from e2progs-1.18/misc/mke2fs.c
 	if ((MAJOR (st.st_rdev) == HD_MAJOR && MINOR (st.st_rdev)%64 == 0) ||
-	    (SCSI_BLK_MAJOR (MAJOR(st.st_rdev)) && MINOR (st.st_rdev) % 16 == 0)) {
+	    (( MAJOR (st.st_rdev) == SCSI_DISK0_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK1_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK2_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK3_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK4_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK5_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK6_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK7_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK8_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK9_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK10_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK11_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK12_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK13_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK14_MAJOR ||
+	       MAJOR (st.st_rdev) == SCSI_DISK15_MAJOR) &&
+	     MINOR (st.st_rdev) % 16 == 0)) {
 	    printf ("mkreiserfs: %s is entire device, not just one partition! Continue? (y/n) ", 
 		   device_name); 
 	    if (!user_confirmed ("Continue (y/n)", "y"))
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/reiserfscore/includes.h reiserfsprogs-3.x.0i-linbox01-patch02/reiserfscore/includes.h
--- reiserfsprogs-3.x.0i-linbox01/reiserfscore/includes.h	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/reiserfscore/includes.h	2010-02-19 09:49:51.000000000 -0500
@@ -1,7 +1,11 @@
 /*
  * Copyright 2000 by Hans Reiser, licensing governed by reiserfs/README
  */
+
 #define _GNU_SOURCE
+#define _LARGEFILE64_SOURCE
+
+#include <stdlib.h>
 #include <stdio.h>
 #include <string.h>
 #include <errno.h>
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/reiserfscore/prints.c reiserfsprogs-3.x.0i-linbox01-patch02/reiserfscore/prints.c
--- reiserfsprogs-3.x.0i-linbox01/reiserfscore/prints.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/reiserfscore/prints.c	2010-02-19 09:49:51.000000000 -0500
@@ -747,6 +747,7 @@
 
 	    j --;
 	end:
+	    ;
 	}
     } else {
 	/* first block addressed by this bitmap is free */
@@ -786,6 +787,7 @@
 	
 	    j --;
 	end2:
+	    ;
 	}
     }
 
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/reiserfscore/reiserfslib.c reiserfsprogs-3.x.0i-linbox01-patch02/reiserfscore/reiserfslib.c
--- reiserfsprogs-3.x.0i-linbox01/reiserfscore/reiserfslib.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/reiserfscore/reiserfslib.c	2010-02-19 09:49:51.000000000 -0500
@@ -95,7 +95,7 @@
     struct reiserfs_super_block * rs;
     int fd, i;
     
-    fd = open (filename, flags | O_LARGEFILE);
+    fd = open64 (filename, flags | O_LARGEFILE);
     if (fd == -1) {
 	if (error)
 	    *error = errno;
@@ -172,7 +172,7 @@
 void reiserfs_reopen (reiserfs_filsys_t fs, int flag)
 {
     close (fs->s_dev);
-    fs->s_dev = open (fs->file_name, flag | O_LARGEFILE);
+    fs->s_dev = open64 (fs->file_name, flag | O_LARGEFILE);
     if (fs->s_dev == -1)
 	die ("reiserfs_reopen: could not reopen device: %m");
 }
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/reiserfscore/stree.c reiserfsprogs-3.x.0i-linbox01-patch02/reiserfscore/stree.c
--- reiserfsprogs-3.x.0i-linbox01/reiserfscore/stree.c	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/reiserfscore/stree.c	2010-03-03 10:56:16.000000000 -0500
@@ -58,7 +58,7 @@
             0 if key1 = key2
             1 if key1 > key2
 */
-inline int comp_short_keys (void * k1, void * k2)
+int comp_short_keys (void * k1, void * k2)
 {
     __u32 * p_s_key1, * p_s_key2;
     int n_key_length = REISERFS_SHORT_KEY_LEN;
@@ -83,7 +83,7 @@
             0 if key1 = key2
             1 if key1 > key2
 */
-inline int  comp_keys (void * p1, void * p2)
+int  comp_keys (void * p1, void * p2)
 {
     int retval;
     struct key * k1, * k2;
@@ -126,7 +126,7 @@
  there are no possible items, and we have not found it. With each examination we
  cut the number of possible items it could be by one more than half rounded down,
  or we find it. */
-inline	int bin_search (
+int bin_search (
               void    * p_v_key,    /* Key to search for.                   */
 	      void    * p_v_base,   /* First item in the array.             */
 	      int       p_n_num,    /* Number of items in the array.        */
@@ -176,7 +176,7 @@
    there is no delimiting key in the tree (buffer is first or last buffer in
    tree), and in this case we return a special key, either MIN_KEY or
    MAX_KEY. */
-inline	struct  key * get_lkey  (
+struct  key * get_lkey  (
     struct path         * p_s_chk_path,
     struct super_block  * p_s_sb
     ) {
@@ -219,7 +219,7 @@
 
 
 /* Get delimiting key of the buffer at the path and its right neighbor. */
-inline	struct  key * get_rkey  (
+struct  key * get_rkey  (
     struct path         * p_s_chk_path,
     struct super_block  * p_s_sb
     ) {
diff -urN -x '*~' reiserfsprogs-3.x.0i-linbox01/resize_reiserfs/resize.h reiserfsprogs-3.x.0i-linbox01-patch02/resize_reiserfs/resize.h
--- reiserfsprogs-3.x.0i-linbox01/resize_reiserfs/resize.h	2002-07-25 11:57:48.000000000 -0400
+++ reiserfsprogs-3.x.0i-linbox01-patch02/resize_reiserfs/resize.h	2010-02-19 09:49:51.000000000 -0500
@@ -2,6 +2,7 @@
  * Copyright 2000 by Hans Reiser, licensing governed by reiserfs/README
  */
 #define _GNU_SOURCE
+#define _LARGEFILE64_SOURCE
 
 #include <sys/mount.h>
 #include <sys/types.h>
